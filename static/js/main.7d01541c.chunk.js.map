{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageCount","Math","ceil","pages","isFirstPage","isLastPage","className","cn","disabled","href","onClick","map","page","active","items","App","useState","setPerPage","setCurrentPage","length","maxItem","firstItem","lastItem","visibleItems","slice","id","value","onChange","event","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"mMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WC2FMG,EAvF+B,SAAC,GAKxC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAQd,EAAW,EAAGW,GActBI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAEnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAAUJ,IAJhB,SAQE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAxBe,WACD,IAAhBZ,GACFC,EAAaD,EAAc,IAiBzB,oBAWDK,EAAMQ,KAAI,SAACC,GAAD,OACT,oBAEEN,UAAWC,IACT,YAAa,CACXM,OAAQf,IAAgBc,IAJ9B,SAQE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAbEA,MAkBT,oBACEN,UAAWC,IACT,YACA,CACEC,SAAUH,IAJhB,SAQE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QArEgB,WAClBZ,IAAgBE,GAClBD,EAAaD,EAAc,IA8DzB,wBC/EFgB,G,MAAQzB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,OAEPsB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBoB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBoB,EAApB,KAWMtB,EAAQkB,EAAMK,OACdC,EAAUtB,EAAcD,EAExBwB,EAAYD,EAAUvB,EACtByB,EAAWF,EAAUxB,EACvBA,EACAwB,EAEEG,EAAeT,EAAMU,MAAMH,EAAWC,GAE5C,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACUR,GADV,iBAEauB,EAAY,EAFzB,cAEgCC,EAFhC,eAE+C1B,EAF/C,QAKA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO7B,EACP8B,SAnCkB,SAACC,GAC3BX,EAAWY,OAAOD,EAAME,OAAOJ,QAC/BR,EAAe,IA4BT,UAOE,wBAAQQ,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOK,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAhDmB,SAACa,GACxBM,EAAeN,MAkDb,6BACGW,EAAaZ,KAAI,SAACqB,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCnElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7d01541c.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype PaginationProps = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nconst Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pageCount);\n\n  const handleMoveRight = () => {\n    if (currentPage !== pageCount) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handleMoveLeft = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pageCount;\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn(\n          'page-item',\n          {\n            disabled: isFirstPage,\n          },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={handleMoveLeft}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map((page) => (\n        <li\n          key={page}\n          className={cn(\n            'page-item', {\n              active: currentPage === page,\n            },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn(\n          'page-item',\n          {\n            disabled: isLastPage,\n          },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={handleMoveRight}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport Pagination from './components/Pagination/Pagination';\nimport { getNumbers } from './utils';\nimport './App.css';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleSelectPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const total = items.length;\n  const maxItem = currentPage * perPage;\n\n  const firstItem = maxItem - perPage;\n  const lastItem = maxItem > total\n    ? total\n    : maxItem;\n\n  const visibleItems = items.slice(firstItem, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page${currentPage}`}\n        {`(items ${firstItem + 1} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleSelectPerPage}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {visibleItems.map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}